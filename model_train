import numpy as np
import tensorflow as tf
import matplotlib.pyplot as plt
import os
from PIL import Image
import warnings
warnings.simplefilter(action='ignore', category=FutureWarning)

# Load images
folder_path = "testimg"
hira_to_num = {"A": 0, "I" :1, "U":2}

X_list = []
Y_list = []

for filename in os.listdir(folder_path):
    full_path = os.path.join(folder_path, filename)
    img = Image.open(full_path).convert("L") 
    img_array = np.array(img).flatten()
    X_list.append(img_array)
    core = filename.replace("kana","").replace(".jpg", "")
    label = hira_to_num["".join(filter(str.isalpha, core))]
    Y_list.append(label)

Y = np.array(Y_list)
X = np.array(X_list)
input_dim = X.shape[1]
#Model
model = tf.keras.Sequential([
    tf.keras.layers.Input(shape=(input_dim,)),
    tf.keras.layers.Dense(512, activation='relu'),
    tf.keras.layers.Dense(256, activation='relu'),
    tf.keras.layers.Dense(3, activation='linear')
])

model.compile(
    loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
    optimizer=tf.keras.optimizers.Adam(learning_rate=0.001),
)

history = model.fit(X, Y, epochs=20)

# Visualization
m = X.shape[0]
fig, axes = plt.subplots(8,8, figsize=(5,5))
fig.tight_layout(pad=0.13,rect=[0, 0.03, 1, 0.91])

for i, ax in enumerate(axes.flat):
    random_index = np.random.randint(m)
    reshaped_img = X[random_index].reshape((84,83))  
    ax.imshow(reshaped_img, cmap='gray')

    prediction = model.predict(X[random_index].reshape(1, input_dim))
    yhat = np.argmax(tf.nn.softmax(prediction))
    
    ax.set_title(f"{Y[random_index]},{yhat}", fontsize=8)
    ax.set_axis_off()

fig.suptitle("Label vs Predicted", fontsize=14)
plt.show()

model.save('hiragana.keras')
